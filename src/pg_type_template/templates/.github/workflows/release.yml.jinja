name: Release
on:
  push:
    # Push events matching v1.0, v20.15.10, etc.
    tags: ['v[0-9]+.[0-9]+.[0-9]+']
jobs:
  release:
    strategy:
      matrix:
        pg: [17, 16, 15, 14, 13, 12, 11, 10]
    name: Release PostgreSQL {% raw %}${{ matrix.pg }}{% endraw %} on GitHub
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ "{{" }} secrets.{{ github_action_token_name|default('GITHUB_TOKEN') }} {{ "}}" }} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PostgreSQL {% raw %}${{ matrix.pg }}{% endraw %} 
        run: |
          # Add postgres package repo
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null
          
          # Install specified PostgreSQL version
          sudo apt-get update
          sudo apt-get install -y postgresql-{% raw %}${{ matrix.pg }}{% endraw %} postgresql-server-dev-{% raw %}${{ matrix.pg }}{% endraw %}
          
          # Set pg_config path for this PostgreSQL version
          export PG_CONFIG=/usr/lib/postgresql/{% raw %}${{ matrix.pg }}{% endraw %}/bin/pg_config
          echo "PG_CONFIG=/usr/lib/postgresql/{% raw %}${{ matrix.pg }}{% endraw %}/bin/pg_config" >> $GITHUB_ENV

      - name: Build extension
        run: |
          # Build the extension using the specified PostgreSQL version
          make clean
          make PG_CONFIG=$PG_CONFIG
          
          # Create output directory structure
          mkdir -p build/{{ ext_name }}-pg{% raw %}${{ matrix.pg }}-${{ github.ref_name }}{% endraw %}
          mkdir -p build/{{ ext_name }}-pg{% raw %}${{ matrix.pg }}-${{ github.ref_name }}{% endraw %}
          
          # Copy built files
          cp {{ ext_name }}.so build/{{ ext_name }}-pg{% raw %}${{ matrix.pg }}-${{ github.ref_name }}{% endraw %}/
          cp {{ ext_name }}.control build/{{ ext_name }}-pg{% raw %}${{ matrix.pg }}-${{ github.ref_name }}{% endraw %}/
          cp {{ ext_name }}--*.sql build/{{ ext_name }}-pg{% raw %}${{ matrix.pg }}-${{ github.ref_name }}{% endraw %}/
          
          # Create archive with version info
          cd build
          tar -czf {{ ext_name }}-pg{% raw %}${{ matrix.pg }}{% endraw %}-${GITHUB_REF#refs/tags/}.tar.gz {{ ext_name }}-pg{% raw %}${{ matrix.pg }}{% endraw %}/

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: build/{{ ext_name }}-pg{% raw %}${{ matrix.pg }}-${{ github.ref_name }}{% endraw %}.tar.gz
          token: ${{ "{{" }} secrets.{{ github_action_token_name|default('GITHUB_TOKEN') }} {{ "}}" }}  
          fail_on_unmatched_files: true
